---
substitutions:
  # Device defaults
  device_name: sonoff-dual-r3
  friendly_name: Sonoff Dual R3
  device_description: Sonoff Dual Relay Wi-Fi Smart Switch with Power Metering 
  channel_1_name: Light 1
  channel_2_name: Light 2
  restore_mode: RESTORE_DEFAULT_OFF

  # Project info
  project_name: "sonoff.dual-r3"
  project_version: "2.0"

  # Credentials
  wifi_password: "12345678"

esphome:
  name: "${device_name}"
  name_add_mac_suffix: true
  friendly_name: "${friendly_name}"
  comment: "${device_description}"
  project:
    name: "${project_name}"
    version: "${project_version}"

esp32:
  board: esp32dev
  framework:
    type: arduino

# To be able to get logs from the device via serial and api.
logger:
  # Disable logging over serial
  baud_rate: 0

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating.
ota:
  reboot_timeout: 15min
  num_attempts: 4

# Public location of this yaml file.
dashboard_import:
  package_import_url: github://scsole/esphome-device-configs/sonoff-dual-r3.yaml@main

wifi:
  # Setup a wifi access point.
  ap:
    password: "${wifi_password}"

# In combination with wifi `ap`, allow the user to provision wifi credentials to the device.
captive_portal:

binary_sensor:
  # Built-in button
  - platform: gpio
    name: Button
    pin:
      number: GPIO00
      mode:
        input: true
        pullup: true
      inverted: true
    internal: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.01s
        then:
          - light.toggle: light_1
      - timing:
          - ON for at least 4s
        then:
          - button.press: reset
  # Input 1
  - platform: gpio
    name: Input 1
    pin: GPIO32
    id: switch_1
    disabled_by_default: true
    # Edge
    # on_press:
    #   then:
    #     - light.toggle:
    #         id: light_1
    # on_release:
    #   then:
    #     - light.toggle:
    #         id: light_1
    # Toggle
    on_press:
      then:
        - light.turn_on:
            id: light_1
    on_release:
      then:
        - light.turn_off:
            id: light_1
  # Input 2
  - platform: gpio
    name: Input 2
    pin: GPIO33
    id: switch_2
    disabled_by_default: true
    # Edge
    # on_press:
    #   then:
    #     - light.toggle:
    #         id: light_2
    # on_release:
    #   then:
    #     - light.toggle:
    #         id: light_2
    # Toggle
    on_press:
      then:
        - light.turn_on:
            id: light_2
    on_release:
      then:
        - light.turn_off:
            id: light_2

output:
  - platform: gpio
    pin: GPIO27
    id: relay_1
  - platform: gpio
    pin: GPIO14
    id: relay_2

light:
  - platform: binary
    name: "${channel_1_name}"
    output: relay_1
    id: light_1
    restore_mode: ${restore_mode}
  - platform: binary
    name: "${channel_2_name}"
    output: relay_2
    id: light_2
    restore_mode: ${restore_mode}

status_led:
  pin:
    number: GPIO13
    inverted: true

button:
  - platform: restart
    name: Restart
  - platform: factory_reset
    name: Restart with Factory Default Settings
    disabled_by_default: true
    id: reset

uart:
  tx_pin: GPIO25
  rx_pin: GPIO26
  baud_rate: 4800
  parity: NONE
  stop_bits: 2

sensor:
  - platform: bl0939
    update_interval: 30s
    voltage:
      name: Voltage
    current_1:
      name: Current 1
      disabled_by_default: True
    current_2:
      name: Current 2
      disabled_by_default: True
    active_power_1:
      name: Power 1
    active_power_2:
      name: Power 2
    energy_1:
      name: Energy 1
    energy_2:
      name: Energy 2
    energy_total:
      name: Energy Total
  - platform: wifi_signal
    name: WiFi Signal dB
    id: wifi_signal_db
    update_interval: 60s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
    ssid:
      name: Connected SSID
    mac_address:
      name: Mac Address
