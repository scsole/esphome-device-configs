---
substitutions:
  name: "sonoff-pow-r2"
  friendly_name: "Sonoff POW R2"
  comment: "Sonoff POWR2 Smart Switch"

  # Time between sensor updates
  update_interval: "10s"
  # Current Limit in amps
  current_limit: "15"
  # Underlying restore mode for the switch
  switch_restore_mode: "RESTORE_DEFAULT_OFF"

  # Power bellow this threshold will be reported as 0W
  power_threshold: "0.2"
  # Roughly correct for the relay's power usage
  power_offset: "0.0"
  # Current bellow this threshold will be reported as 0A
  current_threshold: "0.1"
  # Roughly correct for the relay's current draw
  current_offset: "0.0"

packages:
  base: !include modules/base.yaml

esphome:
  min_version: 2024.6.0
  project:
    name: "Sonoff.POWR2"
    version: "v1.1.1-scsole"
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
              return id(restore_mode) - 1;
        - lambda: |-
            switch(id(restore_mode))
            {
              case 1:
                id(relay).turn_off();
                break;
              case 2:
                id(relay).turn_on();
                break;
              default:
                break;
            }

esp8266:
  board: esp01_1m

dashboard_import:
  package_import_url: github://scsole/esphome-device-configs/sonoff-pow-r2.yaml
  import_full_config: false

globals:
  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "3" # 1 = Always_Off, 2 = Always_On, 3 = Restore_State

select:
  - platform: template
    name: Power On State
    id: power_mode
    optimistic: true
    icon: mdi:electric-switch
    options:
      - Always Off
      - Always On
      - Restore State
    on_value:
      then:
        - lambda: |-
            id(restore_mode) = i + 1;
    entity_category: config

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: Button
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.1s
        then:
          - switch.toggle: relay
      - timing:
          - ON for at least 4s
        then:
          - button.press: factory_reset_button

  - platform: template
    name: Overcurrent
    id: overcurrent
    device_class: problem
    entity_category: diagnostic
    publish_initial_state: true

uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

sensor:
  - platform: cse7766
    voltage:
      name: Voltage
      filters:
        - throttle_average: ${update_interval}
      disabled_by_default: true
    current:
      name: Current
      filters:
        - throttle_average: ${update_interval}
        - lambda: |-
            if (x < (${current_threshold} + ${current_offset}))
              return 0.0;
            else
              return (x - ${current_offset});
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: relay
            - binary_sensor.template.publish:
                id: overcurrent
                state: true
      disabled_by_default: true
    power:
      name: Power
      id: power_sensor
      filters:
        - throttle_average: ${update_interval}
        - lambda: |-
            if (x < (${power_threshold} + ${power_offset}))
              return 0.0;
            else
              return (x - ${power_offset});
    energy:
      name: Energy
      unit_of_measurement: kWh
      filters:
        - throttle: ${update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      disabled_by_default: true
    apparent_power:
      name: Apparent Power
      filters:
        - throttle_average: ${update_interval}
      disabled_by_default: true
    reactive_power:
      name: Reactive Power
      filters:
        - throttle_average: ${update_interval}
      disabled_by_default: true
    power_factor:
      name: Power Factor
      filters:
        - throttle_average: ${update_interval}
      disabled_by_default: true

  - platform: total_daily_energy
    name: Total Daily Energy
    power_id: power_sensor
    unit_of_measurement: kWh
    device_class: energy
    accuracy_decimals: 3
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

  - platform: integration
    name: Total Energy
    id: total_energy
    sensor: power_sensor
    time_unit: h
    integration_method: right
    restore: true
    state_class: total_increasing
    unit_of_measurement: kWh
    device_class: energy
    accuracy_decimals: 3
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

switch:
  - platform: gpio
    name: Switch
    pin: GPIO12
    id: relay
    restore_mode: ${switch_restore_mode}
    on_turn_on:
      - binary_sensor.template.publish:
          id: overcurrent
          state: false

button:
  - platform: template
    name: Reset Total Energy
    on_press:
      - sensor.integration.reset: total_energy
    entity_category: config

light:
  - platform: status_led
    name: Status LED
    pin:
      number: GPIO13
      inverted: true
    entity_category: config
    disabled_by_default: true
